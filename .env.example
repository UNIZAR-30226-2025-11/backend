# This is the environment mode Node is launched. Although it is considered an
# antipattern (see https://nodejs.org/en/learn/getting-started/nodejs-the-difference-between-development-and-production)
# some libraries use it to define behaviour. E.g. express won't send the
# exception trace when in production.
#
# Can be set as developement or production. In case of doubt, leave it blank or
# set it to production
NODE_ENV="production"

# Set this flag in production, otherwise cookies won't be stored
SECURE_COOKIES=

# This is the port the server will be launched locally. If not provided, it will
# launch on port 8000
PORT=

# Location of the frontend server. Needed to properly resolve CORS
# For the dev environment, it will be "http://localhost:5173"
# If not specified, it will be set to a wildcard, but then cookies won't work
# If multiple origins are needed, set them as a comma separated list, e.g.
# "http://localhost:5173,http://localhost:3000"
FRONTEND_URL=

# This is where the Postgres database is located. For a local deployment, for
# example, you can use localhost:5432, which is the default if not provided.
# IMPORTANT: If you are running both the backend and the database as containers,
# you will need to set the host to "database"
PGHOST=
PGPORT=

# Credentials of the database. Set them up the same way as in the database.
PGUSER=
PGPASSWORD=
PGDATABASE=

# String used to sign JWT tokens. The longer, the better, and if randomly
# generated, the best.
# If you see an assertion error, it's because this cannot be empty.
JWT_SECRET=


# Logging level. Can be set to "silly", "debug", "info", "warn", "error" or "fatal"
LOG_LEVEL=

# Enable or disable the logging IN TERMINAL. Can be set to "true" or "false"
ENABLE_LOGGING=
