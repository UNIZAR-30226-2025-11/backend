name: Build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    environment: testing
    strategy:
      matrix:
        node-version: [23.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Make backend .env
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_PORT: 8000
        envkey_PGHOST: localhost
        envkey_PGPORT: 5432
        envkey_PGUSER: admin
        envkey_PGPASSWORD: ${{ secrets.PGPASSWORD }}
        envkey_PGDATABASE: "katboom"
        envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
        file_name: .env

    - name: Make backend .env.test
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_PORT: 8000
        envkey_PGHOST: localhost
        envkey_PGPORT: 5432
        envkey_PGUSER: admin
        envkey_PGPASSWORD: ${{ secrets.PGPASSWORD }}
        envkey_PGDATABASE: "katboom_testing"
        envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
        file_name: .env.test

    - name: Make database envfile
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_POSTGRES_USER: admin
        envkey_POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
        envkey_POSTGRES_DB: "katboom"
        file_name: .env.database

    - name: 'Install packages'
      run: npm ci

    - name: 'Build app'
      run: npm run build --if-present

    - name: 'Start database'
      run: 'npm run compose:up -- -d --wait database'

    - name: 'Run tests'
      run: npm run test
